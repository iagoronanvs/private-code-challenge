{"version":3,"sources":["assets/img/notes.svg","assets/img/empty.svg","components/Template/index.js","services/firebase.js","util/helper.js","components/Task/index.js","components/TaskList/index.js","components/Modal/index.js","components/TaskForm/index.js","pages/Main/index.js","components/ResultPanel/index.js","components/TaskTableItem/index.js","components/TaskTable/index.js","pages/Finished/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Template","children","page","number","overlay","body","document","classList","toggle","clientWidth","sidedrawer","getElementById","history","id","className","tabindex","onClick","size","to","src","notes","alt","Api","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","calcTime","sumTimes","sec","Math","floor","min","hor","hours","minutes","seconds","Task","name","times","onSelect","useState","setHours","setMinutes","setSeconds","delay","isRunning","setIsRunning","a","docTask","collection","doc","get","task","taskData","data","status","set","arrTimes","length","finish","push","init","Date","now","calcDiff","forEach","el","difference_ms","timer","callback","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","parseInt","variant","color","disabled","TaskList","selectItem","fluid","map","item","index","md","key","Modal","TaskForm","isVisible","title","onCancel","form","setForm","onSubmit","ev","preventDefault","createdAt","add","required","label","value","onChange","target","description","rows","type","App","setVisible","list","setList","list2","setList2","setTask","where","orderBy","onSnapshot","res","tasks","docs","empty","style","width","ResultPanel","icon","TaskTableItem","timeWork","setTimeWork","taskAux","margin","TaskTable","textAlign","colSpan","Finished","averageTime","setAverageTime","calcTimeWork","listTask","getTasks","Routes","exact","path","component","Main","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,iOCgG5BC,MAtFf,YAAwD,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,OAClC,SAASC,IACP,IAAIC,EAAOC,SAASD,KAEpB,GADAA,EAAKE,UAAUC,OAAO,mBAClBH,EAAKI,YAAc,IAAK,CAC1B,IAAIC,EAAaJ,SAASK,eAAe,cACrCP,EAAUE,SAASK,eAAe,eAEtCD,EAAWH,UAAUC,OAAO,UAC5BJ,EAAQG,UAAUC,OAAO,SAI7B,OAbqD,EAAXI,QAcxC,oCACE,yBACEC,GAAG,cACHC,UAAU,OACVC,SAAS,KACTC,QAASZ,IAEX,yBAAKS,GAAG,aAAaC,UAAU,uBAC7B,yBAAKD,GAAG,mBAAmBC,UAAU,2BACnC,kBAAC,IAAD,CAASG,KAAM,GAAIH,UAAU,eAC7B,0BAAMA,UAAU,mBAAhB,UAEF,kBAAC,IAAD,CACEI,GAAG,IACHJ,UACW,YAATZ,EACI,yCACA,mBAGN,kBAAC,IAAD,CAAae,KAAM,KACnB,uBAAGH,UAAU,aAAb,YAEF,kBAAC,IAAD,CACEI,GAAG,YACHJ,UACW,0BAATZ,EACI,yCACA,mBAGN,kBAAC,IAAD,CAAsBe,KAAM,KAC5B,uBAAGH,UAAU,aAAb,0BAEF,yBAAKA,UAAU,eACb,yBAAKA,UAAU,sBACb,yBAAKK,IAAKC,IAAOC,IAAI,QAAQP,UAAU,uBAF3C,iEAI0D,6BACxD,uBAAGA,UAAU,UACX,6BADF,gCAE+B,6BAF/B,0BAGyB,6BAHzB,uBAOJ,4BAAQD,GAAG,UACT,yBAAKC,UAAU,sCACb,yBAAKA,UAAU,iBACb,uBACEA,UAAU,iGACVE,QAASZ,GAFX,UAMA,uBACEU,UAAU,qEACVE,QAASZ,GAFX,UAMA,0BAAMU,UAAU,oBACbZ,EADH,IACUC,GAAU,GAAK,kCAAQA,EAAR,SAK9BF,I,kCC3EQqB,G,MAHEC,IAAIC,cAVA,CACnBC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,8CAIYC,aCQRC,EAAW,SAAAC,GACtB,IAAIC,EAAMC,KAAKC,MAAMH,EAAW,IAChCA,GAAsB,GACtB,IAAII,EAAMF,KAAKC,MAAMH,EAAW,IAChCA,GAAsB,GACtB,IAAIK,EAAMH,KAAKC,MAAMH,EAAW,IAShC,OANAK,GAAc,GAFHH,KAAKC,MAAMH,EAAW,KAIvB,KAAIK,EAAG,WAAOA,IACpBD,EAAM,KAAIA,EAAG,WAAOA,IACpBH,EAAM,KAAIA,EAAG,WAAOA,IAEjB,CAAEK,MAAOD,EAAKE,QAASH,EAAKI,QAASP,ICuJ/BQ,EAhLF,SAAC,GAAmC,IAAjC9B,EAAgC,EAAhCA,GAAI+B,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACpBC,mBAAS,MADW,mBACvCP,EADuC,KAChCQ,EADgC,OAEhBD,mBAAS,MAFO,mBAEvCN,EAFuC,KAE9BQ,EAF8B,OAGhBF,mBAAS,MAHO,mBAGvCL,EAHuC,KAG9BQ,EAH8B,OAI9BH,mBAAS,KAAlBI,EAJuC,sBAKZJ,oBAAS,GALG,mBAKvCK,EALuC,KAK5BC,EAL4B,iDA6B9C,gCAAAC,EAAA,6DACMC,EAAUjC,EAAIkC,WAAW,SAASC,IAAI5C,GAD5C,SAEmB0C,EAAQG,MAF3B,OAEMC,EAFN,QAGMC,EAAWD,EAAKE,QACXC,OAAS,EAClBP,EAAQQ,IAAIH,GALd,4CA7B8C,kEAqC9C,kCAAAN,EAAA,6DACMC,EAAUjC,EAAIkC,WAAW,SAASC,IAAI5C,GAD5C,SAEmB0C,EAAQG,MAF3B,OAEMC,EAFN,OAGMC,EAAWD,EAAKE,QAKE,KAHlBG,EAAWJ,EAASf,MAAQe,EAASf,MAAQ,IAGtCoB,QACRD,EAASC,OAAS,GAA6C,MAAxCD,EAASA,EAASC,OAAS,GAAGC,UAEtDF,EAASG,KAAK,CAAEC,KAAMC,KAAKC,MAAOJ,OAAQ,OAC1CN,EAASf,MAAQmB,EACjBT,EAAQQ,IAAIH,IAGdP,GAAa,GAhBf,4CArC8C,kEAwD9C,gCAAAC,EAAA,6DACMC,EAAUjC,EAAIkC,WAAW,SAASC,IAAI5C,GAD5C,SAEmB0C,EAAQG,MAF3B,OAEMC,EAFN,QAGMC,EAAWD,EAAKE,QAGThB,MAAMoB,OAAS,GAC6B,OAArDL,EAASf,MAAMe,EAASf,MAAMoB,OAAS,GAAGC,SAE1CN,EAASf,MAAMe,EAASf,MAAMoB,OAAS,GAAGC,OAASG,KAAKC,MACxDf,EAAQQ,IAAIH,IAGdP,GAAa,GACbkB,EAASX,EAASf,OAdpB,4CAxD8C,sBAyE9C,SAAS0B,IAA2B,IAAlBP,EAAiB,uDAAN,KACvB9B,EAAW,EACXW,IAAUmB,GACZnB,EAAM2B,SAAQ,SAAAC,GACZ,IAAIP,EAAS,EACRO,EAAGP,SAAQA,EAASG,KAAKC,OAE9B,IAAII,EACS,IAAXR,EAAeA,EAASO,EAAGL,KAAOK,EAAGP,OAASO,EAAGL,KAGnDlC,GAFAwC,GAAgC,OAMhCV,GACFA,EAASQ,SAAQ,SAAAC,GACf,IAAIC,EAAgBD,EAAGP,OAASO,EAAGL,KAGnClC,GAFAwC,GAAgC,OAMpC,IAAIC,EAAQ1C,EAASC,GACrBgB,EAAWyB,EAAMjC,SACjBO,EAAW0B,EAAMlC,SACjBO,EAAS2B,EAAMnC,OAGbK,IACCmB,GACDnB,EAAMoB,OAAS,GACmB,MAAlCpB,EAAMA,EAAMoB,OAAS,GAAGC,QAExBb,GAAa,GAOjB,OD5HyB,SAACuB,EAAUzB,GACpC,IAAM0B,EAAgBC,mBAGtBC,qBAAU,WACRF,EAAcG,QAAUJ,IACvB,CAACA,IAGJG,qBAAU,WAIR,GAAc,OAAV5B,EAAgB,CAClB,IAAItC,EAAKoE,aAJX,WACEJ,EAAcG,YAGa7B,GAC3B,OAAO,kBAAM+B,cAAcrE,OAE5B,CAACsC,ICDJgC,EAEA,WACE,IAAIhD,EAAMiD,SAAS1C,GAAW,EAE9B,GAAIP,EAAM,GACRe,EAAWf,EAAM,GAAN,WAAeA,GAAQA,OAC7B,CACL,IAAIG,EAAM8C,SAAS3C,GAAW,EAG9B,GAFAS,EAAW,MAEPZ,EAAM,GACRW,EAAWX,EAAM,GAAN,WAAeA,GAAQA,OAC7B,CACL,IAAIC,EAAM6C,SAAS5C,GAAS,EAE5BS,EAAW,MACXD,EAAST,EAAM,GAAN,WAAeA,GAAQA,OAjBda,EAAYD,EAAQ,MAwG5C4B,qBAAU,WACRR,MACC,IAGD,kBAAC,IAAD,CAAOzD,UAAWsC,GAAa,eAC7B,yBACEtC,UACEsC,EACI,yDACA,wCAENpC,QAAS8B,GAERF,GAEH,yBAAK9B,UAAU,eACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAgBG,KAAM,GAAIH,UAAU,SADtC,UAEM0B,EAFN,YAEeC,EAFf,YAE0BC,IAG1B,yBAAK5B,UAAU,kBACb,kBAAC,IAAD,CACEA,UAAU,cACVG,KAAK,QACLoE,QAAQ,SACRC,MAAM,UACNtE,QA5IkC,2CA6IlCuE,SAAUnC,GANZ,YAWA,6BACE,kBAAC,IAAD,CACEnC,KAAK,QACLqE,MAAM,UACND,QAAQ,OACRvE,UAAU,cACVE,QAxJgC,2CAyJhCuE,UAAWnC,GAEX,kBAAC,IAAD,CAAStC,UAAU,mBAAmBG,KAAM,MAG9C,kBAAC,IAAD,CACEA,KAAK,QACLqE,MAAM,UACND,QAAQ,OACRvE,UAAU,cACVE,QAnKgC,2CAoKhCuE,SAAUnC,GAEV,kBAAC,IAAD,CAAatC,UAAU,mBAAmBG,KAAM,Y,mDCrJjDuE,EApBE,SAAC,GAA0B,IAAxB3B,EAAuB,EAAvBA,KAAM4B,EAAiB,EAAjBA,WACxB,OACE,kBAAC,IAAD,CAAWC,OAAO,GAChB,kBAAC,IAAD,KACG7B,GACCA,EAAK8B,KAAI,SAACC,EAAMC,GAAP,OACP,kBAAC,IAAD,CAAKC,GAAG,IAAIC,IAAKF,GACf,kBAAC,EAAD,CACE/C,SAAU,kBAAM2C,EAAWG,IAC3B/E,GAAI+E,EAAK/E,GACT+B,KAAMgD,EAAKhD,KACXC,MAAO+C,EAAK/C,gB,0CCTbmD,EARD,SAAC,GAAD,IAAG/F,EAAH,EAAGA,SAAH,OACZ,yBAAKY,GAAG,eACN,yBAAKC,UAAU,UACb,yBAAKA,UAAU,SAASb,OCoEfgG,MA/Df,YAAyD,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,SAAUzC,EAAQ,EAARA,KAAQ,EAC9BZ,mBAAS,IADqB,mBAC/CsD,EAD+C,KACzCC,EADyC,KAwBtD,OArBAvB,qBAAU,WACRuB,EAAQ3C,GAAc,MACrB,CAACuC,EAAWvC,IAoBb,oCACGuC,GACC,kBAAC,EAAD,KACE,0BAAMpF,UAAU,WAAWyF,SArBnC,SAAkBC,GAGhB,GAFAA,EAAGC,iBAECJ,EAAKxF,GAAI,CACX,IAAI0C,EAAUjC,EAAIkC,WAAW,SAASC,IAAI4C,EAAKxF,WACxCwF,EAAKxF,GACZ0C,EAAQQ,IAAIsC,QAEZA,EAAKvC,OAAS,EACduC,EAAKK,UAAY,IAAIrC,KACrB/C,EAAIkC,WAAW,SAASmD,IAAIN,GAG9BD,IACAE,EAAQ,MAQA,gCAASH,GACT,yBAAKrF,UAAU,iBACb,kBAAC,IAAD,CACE8F,UAAQ,EACRC,MAAM,OACNC,MAAOT,EAAKzD,KACZmE,SAAU,SAAAP,GAAE,OAAIF,EAAQ,eAAKD,EAAN,CAAYzD,KAAM4D,EAAGQ,OAAOF,aAGvD,yBAAKhG,UAAU,iBACb,kBAAC,IAAD,CACE+F,MAAM,kBACNC,MAAOT,EAAKY,YACZF,SAAU,SAAAP,GAAE,OACVF,EAAQ,eAAKD,EAAN,CAAYY,YAAaT,EAAGQ,OAAOF,UAE5CI,KAAM,MAGV,yBAAKpG,UAAU,mBACb,kBAAC,IAAD,CAAQqG,KAAK,SAAS9B,QAAQ,SAASrE,QAASoF,GAAhD,YAGA,kBAAC,IAAD,CAAQd,MAAM,UAAU6B,KAAK,UAA7B,e,iBCyBCC,MAzEf,YAA2B,IAAZxG,EAAW,EAAXA,QAAW,EACQmC,oBAAS,GADjB,mBACjBmD,EADiB,KACNmB,EADM,OAEAtE,mBAAS,MAFT,mBAEjBuE,EAFiB,KAEXC,EAFW,OAGExE,mBAAS,IAHX,mBAGjByE,EAHiB,KAGVC,EAHU,OAIA1E,mBAAS,MAJT,mBAIjBY,EAJiB,KAIX+D,EAJW,KA2CxB,OAJA3C,qBAAU,WAhCRzD,EAAIkC,WAAW,SACZmE,MAAM,SAAU,KAAM,GACtBC,QAAQ,YAAa,OACrBC,WAHH,uCAGc,WAAMC,GAAN,eAAAxE,EAAA,sDACViE,EAAQ,IACJQ,EAAQ,GACZD,EAAIE,KAAKrC,KAAI,SAAAlC,GACX,IAAIE,EAAOF,EAAII,OAGf,OAFAF,EAAK9C,GAAK4C,EAAI5C,GACdkH,EAAM5D,KAAKR,IACJ,KAET4D,EAAQQ,GACRN,EAASM,GAVC,2CAHd,yDAkCC,IAGD,kBAAC,EAAD,CAAU7H,KAAK,UAAUC,OAAQqH,EAAMvD,OAAQrD,QAASA,GACrD0G,GAAwB,IAAhBA,EAAKrD,QACZ,yBAAKpD,GAAG,0BACN,yBAAKC,UAAU,SACb,yBAAKK,IAAK8G,IAAO5G,IAAI,QAAQ6G,MAAO,CAAEC,MAAO,OAC7C,uBAAGrH,UAAU,eAAb,2CAILwG,GAAQA,EAAKrD,OAAS,GACrB,yBAAKpD,GAAG,mBACN,kBAAC,EAAD,CAAUgD,KAAMyD,EAAM7B,WAAY,SAAAG,GAAI,OA/B9C,SAAoBA,GAClB8B,EAAQ9B,GACRyB,GAAW,GA6BqC5B,CAAWG,OAIzD,kBAAC,IAAD,CAAQ9E,UAAU,UAAUuE,QAAQ,MAAMC,MAAM,UAAUtE,QA9B9D,WACE0G,EAAQ,MACRL,GAAW,KA6BP,kBAAC,IAAD,CAAOpG,KAAM,MAGf,kBAAC,EAAD,CACEiF,UAAWA,EACXE,SA/BN,WACEsB,EAAQ,MACRL,GAAW,IA8BPlB,MAAM,mBACNxC,KAAMA,MChECyE,EAZK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMlC,EAAT,EAASA,MAAOW,EAAhB,EAAgBA,MAAhB,OAClB,kBAAC,IAAD,CAAKhB,GAAG,KACN,kBAAC,IAAD,CAAOhF,UAAU,oBACf,yBAAKA,UAAU,eAAeuH,GAC9B,yBAAKvH,UAAU,kBACb,uBAAGA,UAAU,wBAAwBqF,GACrC,uBAAGrF,UAAU,wBAAwBgG,QC4C9BwB,MA/Cf,YAAkC,IAAT3E,EAAQ,EAARA,KAAQ,EACCZ,mBAAS,CACvCP,MAAO,KACPC,QAAS,KACTC,QAAS,OAJoB,mBACxB6F,EADwB,KACdC,EADc,iDAO/B,gCAAAlF,EAAA,6DACMC,EAAUjC,EAAIkC,WAAW,SAASC,IAAIE,EAAK9C,IADjD,SAEsB0C,EAAQG,MAF9B,OAEM+E,EAFN,QAGM7E,EAAW6E,EAAQ5E,QACdC,OAAS,EAClBP,EAAQQ,IAAIH,GALd,4CAP+B,sBA6B/B,OAdAmB,qBAAU,WACR,GAAIpB,EAAKd,MAAO,CACd,IAAIX,EAAW,EACfyB,EAAKd,MAAM2B,SAAQ,SAAAC,GACjB,IAAIC,EAAgBD,EAAGP,OAASO,EAAGL,KAGnClC,GAFAwC,GAAgC,OAKlC8D,EAAYvG,EAASC,OAEtB,CAACyB,IAGF,4BACE,4BAAKA,EAAKf,MACV,sCAAQ2F,EAAS/F,MAAjB,YAA0B+F,EAAS9F,QAAnC,YAA8C8F,EAAS7F,UACvD,4BACE,kBAAC,IAAD,CACEzB,KAAK,QACLqE,MAAM,UACNtE,QArCuB,2CAsCvBkH,MAAO,CAAEQ,OAAQ,IAJnB,cCAOC,EAjCG,SAAC,GAAD,IAAG9E,EAAH,EAAGA,KAAH,OAChB,kBAAC,IAAD,CAAW6B,OAAO,GAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKI,GAAG,MACN,kBAAC,IAAD,KACE,2BAAOhF,UAAU,kCACf,+BACE,4BACE,sCACA,gDACA,6CAGJ,+BACG+C,GAAwB,IAAhBA,EAAKI,QACZ,4BACE,wBAAIiE,MAAO,CAAEU,UAAW,UAAYC,QAAS,GAA7C,kDAKHhF,GACCA,EAAK8B,KAAI,SAACC,EAAMC,GAAP,OACP,kBAAC,EAAD,CAAeE,IAAKF,EAAOlC,KAAMiC,eCmEpCkD,MApFf,YAAgC,IAAZlI,EAAW,EAAXA,QAAW,EACLmC,mBAAS,MADJ,mBACtBuE,EADsB,KAChBC,EADgB,OAEHxE,mBAAS,IAFN,mBAEtByE,EAFsB,KAEfC,EAFe,OAGG1E,mBAAS,CACvCP,MAAO,KACPC,QAAS,KACTC,QAAS,OANkB,mBAGtB6F,EAHsB,KAGZC,EAHY,OAQSzF,mBAAS,CAC7CP,MAAO,KACPC,QAAS,KACTC,QAAS,OAXkB,mBAQtBqG,EARsB,KAQTC,EARS,KAc7B,SAASC,EAAaC,GACpB,GAAIA,EAASjF,OAAS,EAAG,CACvB,IAAI/B,EAAW,EAEfgH,EAAS1E,SAAQ,SAAAb,GACXA,EAAKd,OACPc,EAAKd,MAAM2B,SAAQ,SAAAC,GACjB,IAAIC,EAAgBD,EAAGP,OAASO,EAAGL,KAGnClC,GAFAwC,GAAgC,UAOtCsE,EAAe/G,EAASC,EAAWgH,EAASjF,SAC5CuE,EAAYvG,EAASC,KA0BzB,OAtBA6C,qBAAU,WAAM,4CACd,sBAAAzB,EAAA,sDACEhC,EAAIkC,WAAW,SACZmE,MAAM,SAAU,KAAM,GACtBC,QAAQ,YAAa,OACrBC,WAHH,uCAGc,WAAMC,GAAN,eAAAxE,EAAA,sDACViE,EAAQ,IACJQ,EAAQ,GACZD,EAAIE,KAAKrC,KAAI,SAAAlC,GACX,IAAIE,EAAOF,EAAII,OAGf,OAFAF,EAAK9C,GAAK4C,EAAI5C,GACdkH,EAAM5D,KAAKR,IACJ,KAET4D,EAAQQ,GACRN,EAASM,GACTkB,EAAalB,GAXH,2CAHd,uDADF,4CADc,uBAAC,WAAD,wBAmBdoB,KACC,IAGD,kBAAC,EAAD,CAAUjJ,KAAK,wBAAqBU,QAASA,GAC3C,yBAAKC,GAAG,mBACN,kBAAC,IAAD,CAAW6E,OAAO,GAChB,kBAAC,IAAD,KACE,kBAAC,EAAD,CACES,MAAM,iCACNW,MAAOU,EAAMvD,OACboE,KAAM,kBAAC,IAAD,CAAsBpH,KAAM,OAEpC,kBAAC,EAAD,CACEkF,MAAM,6BACNW,MAAK,UAAKyB,EAAS/F,MAAd,YAAuB+F,EAAS9F,QAAhC,YAA2C8F,EAAS7F,SACzD2F,KAAM,kBAAC,IAAD,CAASpH,KAAM,OAEvB,kBAAC,EAAD,CACEkF,MAAM,iBACNW,MAAK,UAAKiC,EAAYvG,MAAjB,YAA0BuG,EAAYtG,QAAtC,YAAiDsG,EAAYrG,SAClE2F,KAAM,kBAAC,IAAD,CAAcpH,KAAM,SAIhC,kBAAC,EAAD,CAAW4C,KAAMyD,OC7EV8B,EATA,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,YAAYC,UAAWT,OCLhC1B,EAFH,kBAAM,kBAAC,EAAD,OCQEqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1J,SAASK,eAAe,SD0HpB,kBAAmBsJ,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.23fdfc9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notes.e51411c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.11d47c17.svg\";","import React, { useEffect } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { MdDashboard, MdAssignmentTurnedIn, MdTimer } from 'react-icons/md';\n\nimport notes from '../../assets/img/notes.svg';\n\nimport '../../assets/css/styles.css';\n\nfunction Template({ children, page, number, history }) {\n  function overlay() {\n    var body = document.body;\n    body.classList.toggle('hide-sidedrawer');\n    if (body.clientWidth < 769) {\n      var sidedrawer = document.getElementById('sidedrawer');\n      var overlay = document.getElementById('mui-overlay');\n\n      sidedrawer.classList.toggle('active');\n      overlay.classList.toggle('hide');\n    }\n  }\n\n  return (\n    <>\n      <div\n        id=\"mui-overlay\"\n        className=\"hide\"\n        tabindex=\"-1\"\n        onClick={overlay}\n      ></div>\n      <div id=\"sidedrawer\" className=\"mui--no-user-select\">\n        <div id=\"sidedrawer-brand\" className=\"mui--appbar-line-height\">\n          <MdTimer size={25} className=\"brand-icon\" />\n          <span className=\"mui--text-title\">gTask</span>\n        </div>\n        <Link\n          to=\"/\"\n          className={\n            page === 'Tarefas'\n              ? 'sidedrawer-item sidedrawer-item-active'\n              : 'sidedrawer-item'\n          }\n        >\n          <MdDashboard size={20} />\n          <p className=\"menu-text\">Tarefas</p>\n        </Link>\n        <Link\n          to=\"/finished\"\n          className={\n            page === 'Tarefas Concluídas'\n              ? 'sidedrawer-item sidedrawer-item-active'\n              : 'sidedrawer-item'\n          }\n        >\n          <MdAssignmentTurnedIn size={20} />\n          <p className=\"menu-text\">Tarefas Concluídas</p>\n        </Link>\n        <div className=\"menu-bottom\">\n          <div className=\"menu-bottom-center\">\n            <img src={notes} alt=\"notes\" className=\"menu-bottom-image\" />\n          </div>\n          Organize suas atividades e calcule o tempo de execução. <br />\n          <p className=\"bolder\">\n            <br />\n            Desenvolvido Por: Iago Ronan <br />\n            iago.vsantos@gmail.com <br /> (82) 9.9838-2776\n          </p>\n        </div>\n      </div>\n      <header id=\"header\">\n        <div className=\"mui-appbar mui--appbar-line-height\">\n          <div className=\"mui-container\">\n            <a\n              className=\"sidedrawer-toggle mui--visible-xs-inline-block mui--visible-sm-inline-block js-show-sidedrawer\"\n              onClick={overlay}\n            >\n              ☰\n            </a>\n            <a\n              className=\"sidedrawer-toggle mui--hidden-xs mui--hidden-sm js-hide-sidedrawer\"\n              onClick={overlay}\n            >\n              ☰\n            </a>\n            <span className=\"mui--text-title2\">\n              {page} {number >= 0 && <span>({number})</span>}\n            </span>\n          </div>\n        </div>\n      </header>\n      {children}\n    </>\n  );\n}\n\nexport default Template;\n","import app from 'firebase/app';\nimport '@firebase/firestore';\n\nvar firebaseConfig = {\n  apiKey: 'AIzaSyCN1wMbwb5cN7ROpAIs1BuaMHAsRugeN-c',\n  authDomain: 'private-code-challange.firebaseapp.com',\n  databaseURL: 'https://private-code-challange.firebaseio.com',\n  projectId: 'private-code-challange',\n  storageBucket: 'private-code-challange.appspot.com',\n  messagingSenderId: '237725154803',\n  appId: '1:237725154803:web:706d5f9c781dc1de42a686'\n};\n\nconst firebase = app.initializeApp(firebaseConfig);\nconst Api = firebase.firestore();\n\nexport default Api;\n","import { useRef, useEffect } from 'react';\n\nexport const useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest function.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\nexport const calcTime = sumTimes => {\n  var sec = Math.floor(sumTimes % 60);\n  sumTimes = sumTimes / 60;\n  var min = Math.floor(sumTimes % 60);\n  sumTimes = sumTimes / 60;\n  var hor = Math.floor(sumTimes % 24);\n  var days = Math.floor(sumTimes / 24);\n\n  hor += days * 24;\n\n  if (hor < 10) hor = `0${hor}`;\n  if (min < 10) min = `0${min}`;\n  if (sec < 10) sec = `0${sec}`;\n\n  return { hours: hor, minutes: min, seconds: sec };\n};\n","import React, { useState, useEffect } from 'react';\n\nimport Panel from 'muicss/lib/react/panel';\nimport Button from 'muicss/lib/react/button';\n\nimport { MdQueryBuilder, MdPlayArrow, MdPause } from 'react-icons/md';\n\nimport Api from '../../services/firebase';\n\nimport { useInterval, calcTime } from '../../util/helper';\n\nconst Task = ({ id, name, times, onSelect }) => {\n  const [hours, setHours] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [seconds, setSeconds] = useState('00');\n  const [delay] = useState(1000);\n  const [isRunning, setIsRunning] = useState(false);\n\n  useInterval(nextSecond, isRunning ? delay : null);\n\n  function nextSecond() {\n    let sec = parseInt(seconds) + 1;\n\n    if (sec < 60) {\n      setSeconds(sec < 10 ? `0${sec}` : sec);\n    } else {\n      let min = parseInt(minutes) + 1;\n      setSeconds('00');\n\n      if (min < 60) {\n        setMinutes(min < 10 ? `0${min}` : min);\n      } else {\n        let hor = parseInt(hours) + 1;\n\n        setMinutes('00');\n        setHours(hor < 10 ? `0${hor}` : hor);\n      }\n    }\n  }\n\n  async function finish() {\n    var docTask = Api.collection('tasks').doc(id);\n    let task = await docTask.get();\n    let taskData = task.data();\n    taskData.status = 1;\n    docTask.set(taskData);\n  }\n\n  async function play() {\n    let docTask = Api.collection('tasks').doc(id);\n    let task = await docTask.get();\n    let taskData = task.data();\n\n    let arrTimes = taskData.times ? taskData.times : [];\n\n    if (\n      arrTimes.length === 0 ||\n      (arrTimes.length > 0 && arrTimes[arrTimes.length - 1].finish != null)\n    ) {\n      arrTimes.push({ init: Date.now(), finish: null });\n      taskData.times = arrTimes;\n      docTask.set(taskData);\n    }\n\n    setIsRunning(true);\n  }\n\n  async function stop() {\n    let docTask = Api.collection('tasks').doc(id);\n    let task = await docTask.get();\n    let taskData = task.data();\n\n    if (\n      taskData.times.length > 0 &&\n      taskData.times[taskData.times.length - 1].finish === null\n    ) {\n      taskData.times[taskData.times.length - 1].finish = Date.now();\n      docTask.set(taskData);\n    }\n\n    setIsRunning(false);\n    calcDiff(taskData.times);\n  }\n\n  function calcDiff(arrTimes = null) {\n    let sumTimes = 0;\n    if (times && !arrTimes) {\n      times.forEach(el => {\n        let finish = 0;\n        if (!el.finish) finish = Date.now();\n\n        var difference_ms =\n          finish !== 0 ? finish - el.init : el.finish - el.init;\n        difference_ms = difference_ms / 1000;\n\n        sumTimes += difference_ms;\n      });\n    }\n\n    if (arrTimes) {\n      arrTimes.forEach(el => {\n        var difference_ms = el.finish - el.init;\n        difference_ms = difference_ms / 1000;\n\n        sumTimes += difference_ms;\n      });\n    }\n\n    let timer = calcTime(sumTimes);\n    setSeconds(timer.seconds);\n    setMinutes(timer.minutes);\n    setHours(timer.hours);\n\n    if (\n      times &&\n      !arrTimes &&\n      times.length > 0 &&\n      times[times.length - 1].finish == null\n    )\n      setIsRunning(true);\n  }\n\n  useEffect(() => {\n    calcDiff();\n  }, []);\n\n  return (\n    <Panel className={isRunning && 'task-active'}>\n      <div\n        className={\n          isRunning\n            ? 'mui--text-subhead task-tilte truncate task-text-active'\n            : 'mui--text-subhead task-tilte truncate'\n        }\n        onClick={onSelect}\n      >\n        {name}\n      </div>\n      <div className=\"task-footer\">\n        <div className=\"task-data\">\n          <div className=\"task-time\">\n            <MdQueryBuilder size={15} className=\"icon\" />\n            {`${hours}:${minutes}:${seconds}`}\n          </div>\n\n          <div className=\"footer-buttons\">\n            <Button\n              className=\"task-button\"\n              size=\"small\"\n              variant=\"raised\"\n              color=\"primary\"\n              onClick={finish}\n              disabled={isRunning}\n            >\n              Concluir\n            </Button>\n\n            <div>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"flat\"\n                className=\"button-icon\"\n                onClick={stop}\n                disabled={!isRunning}\n              >\n                <MdPause className=\"task-icon-button\" size={20} />\n              </Button>\n\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"flat\"\n                className=\"button-icon\"\n                onClick={play}\n                disabled={isRunning}\n              >\n                <MdPlayArrow className=\"task-icon-button\" size={20} />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Panel>\n  );\n};\n\nexport default Task;\n","import React from 'react';\n\nimport Task from '../Task';\n\nimport Container from 'muicss/lib/react/container';\nimport Row from 'muicss/lib/react/row';\nimport Col from 'muicss/lib/react/col';\n\nconst TaskList = ({ data, selectItem }) => {\n  return (\n    <Container fluid={true}>\n      <Row>\n        {data &&\n          data.map((item, index) => (\n            <Col md=\"4\" key={index}>\n              <Task\n                onSelect={() => selectItem(item)}\n                id={item.id}\n                name={item.name}\n                times={item.times}\n              />\n            </Col>\n          ))}\n      </Row>\n    </Container>\n  );\n};\n\nexport default TaskList;\n","import React from 'react';\n\nconst Modal = ({ children }) => (\n  <div id=\"mui-overlay\">\n    <div className=\"center\">\n      <div className=\"modal\">{children}</div>\n    </div>\n  </div>\n);\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\n\nimport Input from 'muicss/lib/react/input';\nimport Textarea from 'muicss/lib/react/textarea';\nimport Button from 'muicss/lib/react/button';\n\nimport Modal from '../Modal';\n\nimport Api from '../../services/firebase';\n\nfunction TaskForm({ isVisible, title, onCancel, task }) {\n  const [form, setForm] = useState({});\n\n  useEffect(() => {\n    setForm(task ? task : {});\n  }, [isVisible, task]);\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n\n    if (form.id) {\n      var docTask = Api.collection('tasks').doc(form.id);\n      delete form.id;\n      docTask.set(form);\n    } else {\n      form.status = 0;\n      form.createdAt = new Date();\n      Api.collection('tasks').add(form);\n    }\n\n    onCancel();\n    setForm({});\n  }\n\n  return (\n    <>\n      {isVisible && (\n        <Modal>\n          <form className=\"mui-form\" onSubmit={onSubmit}>\n            <legend>{title}</legend>\n            <div className=\"mui-textfield\">\n              <Input\n                required\n                label=\"Nome\"\n                value={form.name}\n                onChange={ev => setForm({ ...form, name: ev.target.value })}\n              />\n            </div>\n            <div className=\"mui-textfield\">\n              <Textarea\n                label=\"Descrição\"\n                value={form.description}\n                onChange={ev =>\n                  setForm({ ...form, description: ev.target.value })\n                }\n                rows={10}\n              />\n            </div>\n            <div className=\"mui--text-right\">\n              <Button type=\"button\" variant=\"raised\" onClick={onCancel}>\n                Cancelar\n              </Button>\n              <Button color=\"primary\" type=\"submit\">\n                Salvar\n              </Button>\n            </div>\n          </form>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default TaskForm;\n","import React, { useState, useEffect } from 'react';\n\nimport Button from 'muicss/lib/react/button';\n\nimport { MdAdd } from 'react-icons/md';\n\nimport Template from '../../components/Template';\nimport TaskList from '../../components/TaskList';\nimport TaskForm from '../../components/TaskForm';\n\nimport Api from '../../services/firebase';\n\nimport empty from '../../assets/img/empty.svg';\n\nfunction App({ history }) {\n  const [isVisible, setVisible] = useState(false);\n  const [list, setList] = useState(null);\n  const [list2, setList2] = useState([]);\n  const [task, setTask] = useState(null);\n\n  function getTasks() {\n    Api.collection('tasks')\n      .where('status', '==', 0)\n      .orderBy('createdAt', 'asc')\n      .onSnapshot(async res => {\n        setList([]);\n        let tasks = [];\n        res.docs.map(doc => {\n          var task = doc.data();\n          task.id = doc.id;\n          tasks.push(task);\n          return true;\n        });\n        setList(tasks);\n        setList2(tasks);\n      });\n  }\n\n  function selectItem(item) {\n    setTask(item);\n    setVisible(true);\n  }\n\n  function add() {\n    setTask(null);\n    setVisible(true);\n  }\n\n  function cancel() {\n    setTask(null);\n    setVisible(false);\n  }\n\n  useEffect(() => {\n    getTasks();\n  }, []);\n\n  return (\n    <Template page=\"Tarefas\" number={list2.length} history={history}>\n      {list && list.length === 0 && (\n        <div id=\"content-wrapper-center\">\n          <div className=\"empty\">\n            <img src={empty} alt=\"empty\" style={{ width: 120 }} />\n            <p className=\"text-center\">Nenhuma tarefa cadastrada no momento.</p>\n          </div>\n        </div>\n      )}\n      {list && list.length > 0 && (\n        <div id=\"content-wrapper\">\n          <TaskList data={list} selectItem={item => selectItem(item)} />\n        </div>\n      )}\n\n      <Button className=\"fab-add\" variant=\"fab\" color=\"primary\" onClick={add}>\n        <MdAdd size={25} />\n      </Button>\n\n      <TaskForm\n        isVisible={isVisible}\n        onCancel={cancel}\n        title=\"Adicionar Tarefa\"\n        task={task}\n      />\n    </Template>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nimport Panel from 'muicss/lib/react/panel';\nimport Col from 'muicss/lib/react/col';\n\nconst ResultPanel = ({ icon, title, value }) => (\n  <Col md=\"4\">\n    <Panel className=\"painel-container\">\n      <div className=\"painel-icon\">{icon}</div>\n      <div className=\"painel-content\">\n        <p className=\"painel-content-title\">{title}</p>\n        <p className=\"painel-content-value\">{value}</p>\n      </div>\n    </Panel>\n  </Col>\n);\n\nexport default ResultPanel;\n","import React, { useEffect, useState } from 'react';\n\nimport Button from 'muicss/lib/react/button';\n\nimport { calcTime } from '../../util/helper';\n\nimport Api from '../../services/firebase';\n\nfunction TaskTableItem({ task }) {\n  const [timeWork, setTimeWork] = useState({\n    hours: '00',\n    minutes: '00',\n    seconds: '00'\n  });\n\n  async function reopen() {\n    var docTask = Api.collection('tasks').doc(task.id);\n    let taskAux = await docTask.get();\n    let taskData = taskAux.data();\n    taskData.status = 0;\n    docTask.set(taskData);\n  }\n\n  useEffect(() => {\n    if (task.times) {\n      let sumTimes = 0;\n      task.times.forEach(el => {\n        var difference_ms = el.finish - el.init;\n        difference_ms = difference_ms / 1000;\n\n        sumTimes += difference_ms;\n      });\n\n      setTimeWork(calcTime(sumTimes));\n    }\n  }, [task]);\n\n  return (\n    <tr>\n      <td>{task.name}</td>\n      <td>{`${timeWork.hours}:${timeWork.minutes}:${timeWork.seconds}`}</td>\n      <td>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={reopen}\n          style={{ margin: 0 }}\n        >\n          Reabrir\n        </Button>\n      </td>\n    </tr>\n  );\n}\n\nexport default TaskTableItem;\n","import React from 'react';\n\nimport Panel from 'muicss/lib/react/panel';\nimport Container from 'muicss/lib/react/container';\nimport Row from 'muicss/lib/react/row';\nimport Col from 'muicss/lib/react/col';\n\nimport TaskTableItem from '../TaskTableItem';\n\nconst TaskTable = ({ data }) => (\n  <Container fluid={true}>\n    <Row>\n      <Col md=\"12\">\n        <Panel>\n          <table className=\"mui-table  mui-table--bordered\">\n            <thead>\n              <tr>\n                <th>Tarefa</th>\n                <th>Tempo Trabalhado</th>\n                <th>Opção</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data && data.length === 0 && (\n                <tr>\n                  <td style={{ textAlign: 'center' }} colSpan={3}>\n                    Nenhuma tarefa concluída até o momento.\n                  </td>\n                </tr>\n              )}\n              {data &&\n                data.map((item, index) => (\n                  <TaskTableItem key={index} task={item} />\n                ))}\n            </tbody>\n          </table>\n        </Panel>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default TaskTable;\n","import React, { useState, useEffect } from 'react';\n\nimport { MdAccessTime, MdAssignmentTurnedIn, MdTimer } from 'react-icons/md';\n\nimport Container from 'muicss/lib/react/container';\nimport Row from 'muicss/lib/react/row';\n\nimport Template from '../../components/Template';\nimport ResultPanel from '../../components/ResultPanel';\nimport TaskTable from '../../components/TaskTable';\n\nimport Api from '../../services/firebase';\n\nimport { calcTime } from '../../util/helper';\n\nfunction Finished({ history }) {\n  const [list, setList] = useState(null);\n  const [list2, setList2] = useState([]);\n  const [timeWork, setTimeWork] = useState({\n    hours: '00',\n    minutes: '00',\n    seconds: '00'\n  });\n  const [averageTime, setAverageTime] = useState({\n    hours: '00',\n    minutes: '00',\n    seconds: '00'\n  });\n\n  function calcTimeWork(listTask) {\n    if (listTask.length > 0) {\n      let sumTimes = 0;\n\n      listTask.forEach(task => {\n        if (task.times) {\n          task.times.forEach(el => {\n            var difference_ms = el.finish - el.init;\n            difference_ms = difference_ms / 1000;\n\n            sumTimes += difference_ms;\n          });\n        }\n      });\n\n      setAverageTime(calcTime(sumTimes / listTask.length));\n      setTimeWork(calcTime(sumTimes));\n    }\n  }\n\n  useEffect(() => {\n    async function getTasks() {\n      Api.collection('tasks')\n        .where('status', '==', 1)\n        .orderBy('createdAt', 'asc')\n        .onSnapshot(async res => {\n          setList([]);\n          let tasks = [];\n          res.docs.map(doc => {\n            var task = doc.data();\n            task.id = doc.id;\n            tasks.push(task);\n            return true;\n          });\n          setList(tasks);\n          setList2(tasks);\n          calcTimeWork(tasks);\n        });\n    }\n    getTasks();\n  }, []);\n\n  return (\n    <Template page=\"Tarefas Concluídas\" history={history}>\n      <div id=\"content-wrapper\">\n        <Container fluid={true}>\n          <Row>\n            <ResultPanel\n              title=\"Total de Tarefas Concluídas\"\n              value={list2.length}\n              icon={<MdAssignmentTurnedIn size={50} />}\n            />\n            <ResultPanel\n              title=\"Total de Horas Trabalhadas\"\n              value={`${timeWork.hours}:${timeWork.minutes}:${timeWork.seconds}`}\n              icon={<MdTimer size={50} />}\n            />\n            <ResultPanel\n              title=\"Tempo Médio\"\n              value={`${averageTime.hours}:${averageTime.minutes}:${averageTime.seconds}`}\n              icon={<MdAccessTime size={50} />}\n            />\n          </Row>\n        </Container>\n        <TaskTable data={list} />\n      </div>\n    </Template>\n  );\n}\n\nexport default Finished;\n","import React from 'react';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Main from './pages/Main';\nimport Finished from './pages/Finished';\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Main} />\n      <Route exact path=\"/finished\" component={Finished} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React from 'react';\n\nimport Routes from './routes';\n\nconst App = () => <Routes />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}